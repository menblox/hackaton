import asyncio
from bleak import BleakScanner, BleakClient

SERVICE_UUID = "19b10000-e8f2-537e-4f6c-d104768a1214"
CHARACTERISTIC_UUID = "19b10001-e8f2-537e-4f6c-d104768a1214"

class EMGReceiver:
    def __init__(self):
        self.client = None
        self.connected = False

    def notification_handler(self, sender, data):
        print(f"üì® –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")
        try:
            text = data.decode('utf-8', errors='ignore')
            print(f"   –¢–µ–∫—Å—Ç: {text}")
        except:
            print(f"   HEX: {data.hex()}")

    def handle_disconnect(self, client):
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ")
        self.connected = False

    async def connect_with_retry(self, device_address, max_attempts=5):
        for attempt in range(max_attempts):
            print(f"üîó –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è {attempt + 1}/{max_attempts}...")
            
            try:
                self.client = BleakClient(
                    device_address, 
                    disconnected_callback=self.handle_disconnect,
                    timeout=20.0  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
                )
                
                await self.client.connect()
                self.connected = True
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ!")
                
                # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                await self.client.start_notify(CHARACTERISTIC_UUID, self.notification_handler)
                print("üì° –°–ª—É—à–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
                
                # –ñ–¥–µ–º –ø–æ–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ
                while self.connected:
                    await asyncio.sleep(1)
                    
                print("üîÑ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ, –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è...")
                await asyncio.sleep(2)  # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
                if attempt < max_attempts - 1:
                    print("üîÑ –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
                    await asyncio.sleep(3)
                else:
                    print("üö´ –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å—á–µ—Ä–ø–∞–Ω—ã")
                    break

async def main():
    receiver = EMGReceiver()
    device_address = "B0:B2:1C:A7:E2:9A"
    
    print(f"üéØ –¶–µ–ª–µ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device_address}")
    await receiver.connect_with_retry(device_address)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")