from machine import UART, Pin, reset
import time
import sys

print("=" * 50)
print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ESP32")
print("=" * 50)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏–Ω–æ–≤
try:
    uart = UART(1, baudrate=9600, tx=Pin(19), rx=Pin(21))
    print("‚úÖ UART1 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    print(f"   TX: Pin 19, RX: Pin 21, Baudrate: 9600")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ UART: {e}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
import gc
mem_free = gc.mem_free()
mem_alloc = gc.mem_alloc()
print(f"üìä –ü–∞–º—è—Ç—å: —Å–≤–æ–±–æ–¥–Ω–æ {mem_free} –±–∞–π—Ç, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {mem_alloc} –±–∞–π—Ç")

# –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã
print("\nüéØ –ù–∞—á–∏–Ω–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª...")
print("üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 'TEST:X' –≤ UART –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã")
print("üìñ –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ UART –µ—Å–ª–∏ –µ—Å—Ç—å")
print("‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –≤ –º–æ–Ω–∏—Ç–æ—Ä–µ –ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

counter = 0
try:
    while True:
        # –ß—Ç–µ–Ω–∏–µ –∏–∑ UART
        if uart.any():
            data = uart.readline()
            if data:
                clean_data = data.decode('utf-8', errors='ignore').strip()
                print(f"üì® –í–•–û–î: {clean_data} (—Å—ã—Ä—ã–µ –±–∞–π—Ç—ã: {data})")
        
        # –ó–∞–ø–∏—Å—å –≤ UART
        test_message = f"TEST:{counter}"
        uart.write(test_message + '\n')
        print(f"üì§ –í–´–•–û–î: {test_message}")
        
        counter += 1
        time.sleep(3)
        
except KeyboardInterrupt:
    print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
except Exception as e:
    print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    print("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
    time.sleep(5)
    reset()